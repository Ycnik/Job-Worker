import winston from 'winston';
import { Camunda8ClientConfiguration } from '../../lib';
/**
 * This is the interface for the logger used in the SDK.
 * It is based on the Winston logger and provides methods for logging at different levels.
 * You can use this interface to create your own logger that implements the same methods.
 */
export type Logger = {
    info: (message: string | undefined, ...meta: any[]) => void;
    warn: (message: string | undefined, ...meta: any[]) => void;
    error: (message: string | undefined, ...meta: any[]) => void;
    debug: (message: string | undefined, ...meta: any[]) => void;
    trace: (message: string | undefined, ...meta: any[]) => void;
};
export declare function getLogger(config?: Camunda8ClientConfiguration): Logger;
export declare function createLogger(options?: winston.LoggerOptions): winston.Logger & {
    trace: (message: string | undefined, ...meta: any[]) => void;
};
export declare const NullLogger: winston.Logger & {
    trace: (message: string | undefined, ...meta: any[]) => void;
};
